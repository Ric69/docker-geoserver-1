version: '3'
services:

  ##################################################################################

  geoserver:
    image: geosolutionsit/geoserver:gs-${DOCKER_IMAGE_VERSION}
    restart: always
    ports:
      - '8001:8080'
    environment:
      - JAVA_OPTS=-Xms${MEM} -Xmx${MEM} -XX:+UseParallelGC -XX:+UseParallelOldGC -DGEOWEBCACHE_CONFIG_DIR=$${GEOSERVER_DATA_DIR}/gwc -DGEOSERVER_LOG_LOCATION=$${GEOSERVER_HOME}/logs/$${HOSTNAME}-slave.log -DGEOSERVER_NODE_OPTS=id:slave-$${HOSTNAME} -DGEOSERVER_AUDIT_PATH=/var/geoserver/audits/geoserver-${DOCKER_HOSTNAME}-slave-$${HOSTNAME}
    volumes:
      - './volumes/geoserver-slaves/data_dir/:/var/geoserver/datadir'
      - './volumes/geoserver-slaves/gwc_cache_dir/:/var/geoserver/gwc_cache_dir'
      - './volumes/shared/data/:/var/geoserver/data'
      - './volumes/shared/logs/:/var/geoserver/logs'
      - './volumes/shared/audits/:/var/geoserver/audits'
      - './config/context.xml:/usr/local/tomcat/conf/context.xml'
    depends_on:
      - postgresql

  geoserver-master:
    image: geosolutionsit/geoserver:gs-${DOCKER_IMAGE_VERSION}
    restart: always
    ports:
      - '8000:8080'
    environment:
      - JAVA_OPTS=-Xms${MEM} -Xmx${MEM} -XX:+UseParallelGC -XX:+UseParallelOldGC -DGEOWEBCACHE_CONFIG_DIR=$${GEOSERVER_DATA_DIR}/gwc -DGEOSERVER_LOG_LOCATION=$${GEOSERVER_HOME}/logs/$${HOSTNAME}-master.log -DGEOSERVER_NODE_OPTS=id:master-$${HOSTNAME} -DGEOSERVER_AUDIT_PATH=/var/geoserver/audits/geoserver-${DOCKER_HOSTNAME}-master-$${HOSTNAME}
    volumes:
      - './volumes/geoserver-master/data_dir/:/var/geoserver/datadir'
      - './volumes/geoserver-master/gwc_cache_dir/:/var/geoserver/gwc_cache_dir'
      - './volumes/shared/data/:/var/geoserver/data'
      - './volumes/shared/logs/:/var/geoserver/logs'
      - './volumes/shared/audits/:/var/geoserver/audits'
      - './config/context.xml:/usr/local/tomcat/conf/context.xml'
    depends_on:
      - postgresql

  ##################################################################################

  # (1) - https://hub.docker.com/r/jenkins/agent/
  # https://stackoverflow.com/questions/37214628/does-jenkins-pipeline-plug-in-support-docker-compose  (check last comment on thread)
  # https://blog.nestybox.com/2019/09/29/jenkins.html
  jenkins-agent:
    image: jenkins/agent
    # running the command from (1)  https://stackoverflow.com/questions/30063907/using-docker-compose-how-to-execute-multiple-commands
    command: java -jar /usr/share/jenkins/agent.jar -workDir /home/jenkins/agent
    volumes:
      - './volumes/jenkins/agent:/home/jenkins/agent'

  ##################################################################################
  # https://github.com/gnokoheat/elk-with-filebeat-by-docker-compose
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300
    stdin_open: true
    tty: true
    network_mode: bridge
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "50"
  
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.10.0
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 5601:5601
    links:
      - elasticsearch:elasticsearch
    depends_on:
      - elasticsearch
    stdin_open: true
    tty: true
    network_mode: bridge
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "50"
  
  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:7.10.0
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - './config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf'
      - './config/logstash.template.json:/usr/share/logstash/templates/logstash.template.json'
    ports:
      - 5044:5044
    links:
      - elasticsearch:elasticsearch
    depends_on:
      - elasticsearch
    stdin_open: true
    tty: true
    network_mode: bridge
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "50"

  filebeat:
    user: root
    container_name: filebeat
    image: docker.elastic.co/beats/filebeat:7.10.0
    links:
      - logstash:logstash
    depends_on:
      - logstash
    volumes:
      - '/var/run/docker.sock:/host_docker/docker.sock'
      - '/var/lib/docker:/host_docker/var/lib/docker'
      - './volumes/shared/logs:/usr/share/filebeat/logs'
      - './config/filebeat.yml:/usr/share/filebeat/filebeat.yml'
    command: ["--strict.perms=false"]
    ulimits:
      memlock:
        soft: -1
        hard: -1
    stdin_open: true
    tty: true
    network_mode: bridge
    deploy:
      mode: global
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "50"

  ##################################################################################

  # used for testing purposes
  postgresql:
    image: 'kartoza/postgis:9.6-2.4'
    hostname: postgresql
    env_file:
      - ./config/postgis.env
    ports:
      - '5432:5432'
    volumes:
      - './volumes/pg/postgis-data:/var/lib/postgresql'
    restart: on-failure
    healthcheck:
      test: "exit 0"

  # used for testing purposes
  pgadmin:
    image: 'dpage/pgadmin4'
    environment:
      - PGADMIN_LISTEN_PORT=80
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=1234
    volumes:
      - './config/pgadmin/servers.json:/pgadmin4/servers.json'
    ports:
      - '81:80'

